第2章 预处理
2.1 预处理的概念与作用
【概念】
预处理器cpp根据以字符#开头的命令（宏定义、条件编译），修改原始的C程序，将引用的所有库展开合并成为一个完整的文本文件。
【作用】
1.	将源文件中用#include形式声明的文件复制到新的程序中。比如 hello.c 中的第6至8行中的#include<stdio.h> 等命令告诉预处理器读取系统头文件 stdio.h /unistd.h/stdlib.h 等内容，并把它直接插入到程序文本中。
2.	用实际值替换用#define定义的字符串（宏定义）。
3.	根据#if后面的条件决定需要编译的代码。
2.2在Ubuntu下预处理的命令
【命令】
cpp hello.c > hello.i
 
图2.1 生成预处理文件hello.i

2.3 Hello的预处理结果解析
使用gedit打开hello.i文件之后发现，整个hello.i文件已经扩展到了3126行，而main函数在第3110行开始。如下图所示：
 
图2.2 hello.i文件中的main函数

而在main函数出现之前的，是stdio.h/ unistd.h/ stdlib.h 的依次展开。以 stdio.h 的展开为例，cpp到默认的环境变量下寻找stdio.h，打开/usr/include/stdio.h发现其中依然使用了#define 语句，cpp对此递归展开，所以最终.i 程序中是没有#define 的。而且发现其中使用了大量的#ifde/ f #ifndef的语句，cpp 会对条件值进行判断来决定是否执行包含在其中的逻辑块。其它的展开与此类似。
2.4 本章小结
本章主要介绍了程序“预处理”的概念、作用和ubuntu下执行预处理的命令，以及对预处理结果hello.i内容的解释。
值得一提的是，预处理是P2P的第一步，这一步程序会因为导入了众多的头文件而变得很长。
