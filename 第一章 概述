第1章 概述
1.1 Hello简介
在Editor中键入代码得到hello.c程序。 
【P2P过程】
在Linux中，hello.c经过cpp的预处理、ccl的编译、as的汇编、ld的链接最终成为可执行目标程序 hello，在shell中键入启动命令后，shell为其fork，产生子进程，于是hello便从Program摇身一变成为Process。 
【O2O过程】
之后shell为其execve，映射虚拟内存，进入程序入口后程序开始载入物理内存，然后进入main函数执行目标代码，CPU为运行的hello分配时间片执行逻辑控制流。当程序运行结束后，shell 父进程负责回收hello进程，内核删除相关数据结构。
1.2 环境与工具
硬件环境	Intel® Core™ i7-7500U @ 2.70GHz
软件环境	Ubuntu16.04.1 LTS
开发与调试工具	gedit/gcc/as/ld/edb/readelf/HexEdit

1.3 中间结果
文件名称	文件作用
hello.c	源程序
hello.i	预处理之后的程序文本
hello.s	编译之后的汇编程序文本
hello.o	汇编之后的可重定位目标执行
hello	链接之后的可执行目标文件
hello.elf	hello.o的ELF格式文本
hello.objdump	hello.o的反汇编代码文本
hello2.elf	hello的ELF格式文本
hello2.objdump	hello的反汇编代码文本呢

1.4 本章小结
	本章主要介绍了hello的P2P和O2O过程，罗列出了完成本次工作所需要的软硬件开发环境、工具和中间结果。
