摘  要
看似简单的计算机编程入门程序“hello”，实则蕴含着计算机系统的一系列成体系的复杂逻辑。本文以“hello”程序为载体，详尽剖析了一段代码从程序到进程的过程中的复杂处理方式方法，以此揭示计算机程序运行时的奥秘。
本文严格按照“从程序到进程”的逻辑顺序组织各章节。有序地介绍了该过程中的预处理、编译、汇编、链接、进程管理、存储管理和IO管理。并依靠“概念清晰-理论严谨-实践验证”的方法，依次严谨地分析各个过程。
本文详尽地分析了一段程序从出生到死亡的全过程，对于详尽理解计算机工作原理有着重要的启蒙作用。
关键词：计算机系统；计算机组成原理；程序    


目  录

第1章 概述	- 4 -
1.1 HELLO简介	- 4 -
1.2 环境与工具	- 4 -
1.3 中间结果	- 4 -
1.4 本章小结	- 5 -
第2章 预处理	- 6 -
2.1 预处理的概念与作用	- 6 -
2.2在UBUNTU下预处理的命令	- 6 -
2.3 HELLO的预处理结果解析	- 7 -
2.4 本章小结	- 7 -
第3章 编译	- 9 -
3.1 编译的概念与作用	- 9 -
3.2 在UBUNTU下编译的命令	- 9 -
3.3 HELLO的编译结果解析	- 10 -
3.4 本章小结	- 16 -
第4章 汇编	- 18 -
4.1 汇编的概念与作用	- 18 -
4.2 在UBUNTU下汇编的命令	- 18 -
4.3 可重定位目标ELF格式	- 19 -
4.4 HELLO.O的结果解析	- 22 -
4.5 本章小结	- 23 -
第5章 链接	- 24 -
5.1 链接的概念与作用	- 24 -
5.2 在UBUNTU下链接的命令	- 24 -
5.3 可执行目标文件HELLO的格式	- 25 -
5.4 HELLO的虚拟地址空间	- 26 -
5.5 链接的重定位过程分析	- 28 -
5.6 HELLO的执行流程	- 29 -
5.7 HELLO的动态链接分析	- 30 -
5.8 本章小结	- 31 -
第6章 HELLO进程管理	- 33 -
6.1 进程的概念与作用	- 33 -
6.2 简述壳SHELL-BASH的作用与处理流程	- 33 -
6.3 HELLO的FORK进程创建过程	- 33 -
6.4 HELLO的EXECVE过程	- 34 -
6.5 HELLO的进程执行	- 35 -
6.6 HELLO的异常与信号处理	- 37 -
6.7本章小结	- 40 -
第7章 HELLO的存储管理	- 41 -
7.1 HELLO的存储器地址空间	- 41 -
7.2 INTEL逻辑地址到线性地址的变换-段式管理	- 41 -
7.3 HELLO的线性地址到物理地址的变换-页式管理	- 43 -
7.4 TLB与四级页表支持下的VA到PA的变换	- 45 -
7.5 三级CACHE支持下的物理内存访问	- 46 -
7.6 HELLO进程FORK时的内存映射	- 47 -
7.7 HELLO进程EXECVE时的内存映射	- 47 -
7.8 缺页故障与缺页中断处理	- 48 -
7.9动态存储分配管理	- 49 -
7.10本章小结	- 51 -
第8章 HELLO的IO管理	- 52 -
8.1 LINUX的IO设备管理方法	- 52 -
8.2 简述UNIX IO接口及其函数	- 52 -
8.3 PRINTF的实现分析	- 53 -
8.4 GETCHAR的实现分析	- 55 -
8.5本章小结	- 55 -
结论	- 56 -
附件	- 57 -
参考文献	- 58 -

